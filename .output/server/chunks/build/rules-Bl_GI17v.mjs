import { mergeProps, useSSRContext } from 'vue';
import { ssrRenderAttrs } from 'vue/server-renderer';
import { _ as _export_sfc } from './_plugin-vue_export-helper-1tPrXgE0.mjs';

const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<section${ssrRenderAttrs(mergeProps({ class: "bg-white px-6 py-10" }, _attrs))}><div class="container mx-auto text-gray-900"><h2 class="font-bold text-[#002C9B] md:text-3xl lg:text-5xl"> APIO 2025 Competition Regulations </h2><p class="my-8 text-2xl text-[#002C9B]">(Upd Date: 28.01.2025)</p><h3 class="mt-6 text-4xl font-bold text-[#002C9B]">Competition Format</h3><ul class="my-8 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> The APIO 2025 competition is a 5-hour window with a strict start time to be chosen by the leader for each student during registration. </li><li> The competition window will be held from 7:00 on May 17th to 19:00 on May 18th (in Tashkent time). </li><li> Each delegation may consist of up to 30 students. However, only the top six students will form the official team, according to the competition results. </li><li> Each competitor must start the competition at the time of their own choice. The start and end times must be within the competition window. The start and end of the competition for each competitor will be chosen by the delegation team leader. </li><li> Students are eligible for this competition if and only if they are eligible for IOI 2025. </li></ul><h3 class="mt-6 text-4xl font-bold text-[#002C9B]">Medal Distribution</h3><p class="mt-4 text-2xl text-[#2C2C2C]"> The medal awards are uniquely determined by the following rules: </p><ul class="mt-4 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> Get a temporary ranking from the top six students of each delegation. </li><li> From the temporary ranking, obtain the medal cut-offs by the following rules: <ul class="mt-2 list-[circle] space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> The largest score such that at least one-twelfth of all competitors from the temporary ranking is the gold cut-off. </li><li> The largest score such that at least one-fourth of all competitors from the temporary ranking is the silver cut-off. </li><li> The smallest score such that at most one-half of all competitors from the temporary ranking is the bronze cut-off. </li></ul></li><li> The top six students from each delegation receive medals according to the cut-offs. Students with the same score as the sixth student also receive the medals according to the cut-offs. </li></ul><h3 class="mt-6 text-4xl font-bold text-[#002C9B]">Proctoring</h3><ul class="mt-4 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> Team leaders can do APIO 2025 Online or Onsite according to their situation. </li><li> Team leaders are in charge of proctoring their teams and ensuring that APIO 2025 is fair. </li></ul></div><div class="container mx-auto my-8 text-gray-900"><h2 class="text-2xl font-bold text-[#002C9B] md:text-3xl"> APIO 2025 Competition Rules </h2><p class="mt-4 text-2xl text-[#2C2C2C]"> Delegation Leaders have the responsibility of ensuring that all members of their delegation fully understand and abide to these rules. Please do not share the tasks after the contest within 2 days since the competition is not held within the same time range. </p><h3 class="mt-6 text-4xl font-bold text-[#002C9B]">A. General</h3><ul class="mt-4 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> APIO 2025 consists of 1 practice problem set and 1 competition day. </li><li>Result of the practice problem set does not affect scoring.</li><li> There will be 3 (three) tasks on the competition day to be solved in 5 (five) hours. </li><li>The supported programming language is C++.</li><li> During the competition, each contestant can only see their own scores. </li></ul><h3 class="mt-6 text-4xl font-bold text-[#002C9B]">B. Submission</h3><ul class="mt-4 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> The source program provided by the contestant must be contained in one source file as specified in the task statement. </li><li> Submissions must not perform explicit input and output operations; instead, data must only be exchanged through the interfaces specified in the task statement. </li><li> For each programming task, the contestants can download a zip file for a programming task from the grading system. <ul class="mt-2 list-[circle] space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> The zip file contains interface files, a sample grading program, a compile script, and a skeleton implementation of a required source file. </li><li> The skeleton exercises an interface, but it does not solve the task. </li><li> The provided sample grader would not be the same as the official grader used by the grading system. </li><li> The provided compile script in the task attachment would not run the same compilation command as the one used by the grading system to accommodate various compiler implementations that contestants have. </li></ul></li><li> Each contestant may submit a solution to each task at most once per minute. </li><li> Each contestant may submit up to 25 submissions for each task unless otherwise stated in the task statement. </li></ul><h3 class="mt-6 text-4xl font-bold text-[#002C9B]">C. Scoring</h3><p class="mt-4 text-2xl text-[#2C2C2C]"> The final score for each task will be calculated as follows: </p><ul class="mt-4 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> For each submission, the score for each test case is calculated according to your program or output, rounded to the nearest 2 decimal places. </li><li> For each submission, the score for each subtask is the minimum of the scores for the test cases in the subtask unless otherwise stated in the task statement. </li><li> The final score for each subtask is the maximum of the scores for this subtask across all submissions. </li><li> The final score for each task is the sum of the scores for its subtasks. </li></ul><p class="mt-4 text-2xl text-[#2C2C2C]"> For example, consider a contestant who made two submissions on a task that contains two subtasks. If the first submitted solution got 30 points for the first subtask and 10 points for the second subtask, and the second solution got 0 points for the first subtask and 40 points for the second subtask, then the final score for this task will be 70. </p></div><div class="container mx-auto text-gray-900"><h3 class="mt-6 text-4xl font-bold text-[#002C9B]">D. Clarification</h3><ul class="mt-4 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> Contestants can submit a clarification request concerning competition tasks, rules, and/or grading using the grading system during the competition. </li><li> Clarification requests must be expressed only in English and will be answered only in English. </li><li> Clarification requests concerning competition tasks will be answered with one of the following: <ul class="mt-2 list-[circle] space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li>\u201CYES\u201D</li><li>\u201CNO\u201D</li><li> \u201CANSWERED IN TASK DESCRIPTION (EXPLICITLY OR IMPLICITLY)\u201D - The task description contains sufficient information. The contestant should read it again carefully. </li><li> \u201CINVALID QUESTION\u201D - The question is most likely not phrased so that a yes/no answer would be meaningful. The contestant is encouraged to rephrase the question. </li><li> \u201CNO COMMENT\u201D - The contestant is asking for information that the Scientific Committee cannot give. </li></ul></li></ul><h3 class="mt-6 text-4xl font-bold text-[#002C9B]">E. Feedback</h3><ul class="mt-4 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> For every submission, the grading system reports the score for each subtask. </li><li> If a subtask is not fully solved, the grading system gives a feedback only for the first test case among the lowest scored test cases in the subtask. </li><li> The feedback includes the test case number and one of the following reasons: <ul class="mt-2 list-[circle] space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li>&quot;Output is correct&quot;</li><li>&quot;Output isn\u2019t correct&quot;</li><li>&quot;Execution timed out&quot;</li><li> &quot;Execution killed (could be triggered by violating memory limits)&quot; </li><li>&quot;Execution failed because the return code was nonzero&quot;</li><li>&quot;Protocol violation&quot;</li></ul></li><li> For task with partial scores, the feedback might also include a \u201COutput is partially correct\u201D reason. </li><li> Submissions performing any of the following actions may result in an unspecified grading verdict (typically \u201CProtocol violation\u201D) <ul class="mt-2 list-[circle] space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> read from the standard input, write to the standard output, or interact with any other file, </li><li>call exit()</li></ul></li></ul><h3 class="mt-6 text-4xl font-bold text-[#002C9B]"> F. Collaboration and Access </h3><ul class="mt-4 list-disc space-y-2 pl-6 text-2xl text-[#2C2C2C]"><li> All submissions from each contestant must be written by the contestant. </li><li> Each contestant is allowed to use any code written before the competition, as long as the code is written by the contestant. </li><li> Each contestant is prohibited to talk or discuss anything related to the content of the competition with anyone, including other contestants, except to the committee of the competition using the clarification request explained in the earlier section. </li><li> Each contestant is allowed to use any sources of information on the Internet, as long as the contestant does not violate the previous rule. In particular, it is forbidden to copy-paste somebody else\u2019s code on the internet, or posting anything related to the content of the competition in an online forum. </li><li> For the sake of respecting the fairness of this online contest format, each contestant is expected to show good sportsmanship by following the above rules honestly. Any violation of the rules can be subject to disqualification. </li></ul></div></section>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/rules.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const rules = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);

export { rules as default };
//# sourceMappingURL=rules-Bl_GI17v.mjs.map
